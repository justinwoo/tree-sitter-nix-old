{
  "name": "nix",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "expr"
      }
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "#"
          },
          {
            "type": "PATTERN",
            "value": ".*"
          }
        ]
      }
    },
    "expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expr_parens"
        },
        {
          "type": "SYMBOL",
          "name": "expr_let_in"
        },
        {
          "type": "SYMBOL",
          "name": "set_fun"
        },
        {
          "type": "SYMBOL",
          "name": "with"
        },
        {
          "type": "SYMBOL",
          "name": "expr_simple"
        }
      ]
    },
    "expr_op": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "-"
            },
            {
              "type": "SYMBOL",
              "name": "expr_op"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "expr_app"
        }
      ]
    },
    "expr_app": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "expr_app"
            },
            {
              "type": "SYMBOL",
              "name": "expr_select"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "expr_select"
        }
      ]
    },
    "expr_let_in": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "let"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "binding"
          }
        },
        {
          "type": "STRING",
          "value": "in"
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        }
      ]
    },
    "expr_select": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expr_simple"
        }
      ]
    },
    "expr_simple": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "boolean"
        },
        {
          "type": "SYMBOL",
          "name": "null"
        },
        {
          "type": "SYMBOL",
          "name": "bind_set"
        },
        {
          "type": "SYMBOL",
          "name": "rec_set"
        },
        {
          "type": "SYMBOL",
          "name": "set"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "integer"
        },
        {
          "type": "SYMBOL",
          "name": "float"
        },
        {
          "type": "SYMBOL",
          "name": "string_double_quoted"
        },
        {
          "type": "SYMBOL",
          "name": "string_two_quotes"
        },
        {
          "type": "SYMBOL",
          "name": "h_path"
        },
        {
          "type": "SYMBOL",
          "name": "s_path"
        },
        {
          "type": "SYMBOL",
          "name": "uri"
        }
      ]
    },
    "expr_parens": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "with": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "with"
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "binding_anon_fun": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "fun_arg"
          }
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "fun_arg": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": ":"
        }
      ]
    },
    "set_fun": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "arg_set"
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        }
      ]
    },
    "arg_set": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "arg_set_attr"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ","
                      },
                      {
                        "type": "SYMBOL",
                        "name": "arg_set_attr"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": ","
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "arg_set_rest"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "arg_set_attr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "STRING",
              "value": "?"
            },
            {
              "type": "SYMBOL",
              "name": "expr"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "arg_set_rest": {
      "type": "STRING",
      "value": "..."
    },
    "binding": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "STRING",
              "value": "="
            },
            {
              "type": "SYMBOL",
              "name": "expr"
            },
            {
              "type": "STRING",
              "value": ";"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "binding_anon_fun"
        }
      ]
    },
    "string_double_quoted": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "string_interp"
              },
              {
                "type": "PATTERN",
                "value": "[^\\$\"]+"
              },
              {
                "type": "PATTERN",
                "value": "\\$[^{]"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "string_two_quotes": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "''"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "string_interp"
              },
              {
                "type": "PATTERN",
                "value": "[^\\$']+"
              },
              {
                "type": "PATTERN",
                "value": "\\$[^{]"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "''"
        }
      ]
    },
    "string_interp": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "${"
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "set_access": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "set"
        },
        {
          "type": "STRING",
          "value": "."
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "set": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "binding"
              },
              {
                "type": "SYMBOL",
                "name": "inherit"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "rec_set": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "rec"
        },
        {
          "type": "SYMBOL",
          "name": "set"
        }
      ]
    },
    "bind_set": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "@"
        },
        {
          "type": "SYMBOL",
          "name": "set"
        }
      ]
    },
    "inherit": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "inherit"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "expr"
          }
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "boolean": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "null": {
      "type": "STRING",
      "value": "null"
    },
    "any_token": {
      "type": "PATTERN",
      "value": ".|\\n"
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_\\'\\-]*"
    },
    "integer": {
      "type": "PATTERN",
      "value": "[0-9]+"
    },
    "float": {
      "type": "PATTERN",
      "value": "(([1-9][0-9]*\\.[0-9]*)|(0?\\.[0-9]+))([Ee][+-]?[0-9]+)?"
    },
    "path": {
      "type": "PATTERN",
      "value": "[a-zA-Z0-9\\._\\-\\+]*(\\/[a-zA-Z0-9\\._\\-\\+]+)+\\/?"
    },
    "h_path": {
      "type": "PATTERN",
      "value": "\\~(\\/[a-zA-Z0-9\\._\\-\\+]+)+\\/?"
    },
    "s_path": {
      "type": "PATTERN",
      "value": "<[a-zA-Z0-9\\._\\-\\+]+(\\/[a-zA-Z0-9\\._\\-\\+]+)*>"
    },
    "uri": {
      "type": "PATTERN",
      "value": "[a-zA-Z][a-zA-Z0-9\\+\\-\\.]*:[a-zA-Z0-9%\\/\\?:@\\&=\\+\\$,\\-_\\.\\!\\~\\*\\']+"
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "comment"
    },
    {
      "type": "PATTERN",
      "value": "[\\s﻿⁠​ ]"
    }
  ],
  "conflicts": [],
  "externals": [],
  "inline": []
}
